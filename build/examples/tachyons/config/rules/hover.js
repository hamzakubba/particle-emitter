"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* babel-plugin-inline-import '../static/_hovers.css.txt' */
var hoversCss = "/*\n\n  HOVER EFFECTS\n  Docs: http://tachyons.io/docs/themes/hovers/\n\n    - Dim\n    - Glow\n    - Hide Child\n    - Underline text\n    - Grow\n    - Pointer\n    - Shadow\n\n*/\n\n/*\n\n  Dim element on hover by adding the dim class.\n\n*/\n.dim {\n  opacity: 1;\n  transition: opacity .15s ease-in;\n}\n.dim:hover,\n.dim:focus {\n  opacity: .5;\n  transition: opacity .15s ease-in;\n}\n.dim:active {\n  opacity: .8; transition: opacity .15s ease-out;\n}\n\n/*\n\n  Animate opacity to 100% on hover by adding the glow class.\n\n*/\n.glow {\n  transition: opacity .15s ease-in;\n}\n.glow:hover,\n.glow:focus {\n  opacity: 1;\n  transition: opacity .15s ease-in;\n}\n\n/*\n\n  Hide child & reveal on hover:\n\n  Put the hide-child class on a parent element and any nested element with the\n  child class will be hidden and displayed on hover or focus.\n\n  <div class=\"hide-child\">\n    <div class=\"child\"> Hidden until hover or focus </div>\n    <div class=\"child\"> Hidden until hover or focus </div>\n    <div class=\"child\"> Hidden until hover or focus </div>\n    <div class=\"child\"> Hidden until hover or focus </div>\n  </div>\n*/\n\n.hide-child .child {\n  opacity: 0;\n  transition: opacity .15s ease-in;\n}\n.hide-child:hover  .child,\n.hide-child:focus  .child,\n.hide-child:active .child {\n  opacity: 1;\n  transition: opacity .15s ease-in;\n}\n\n.underline-hover:hover,\n.underline-hover:focus {\n  text-decoration: underline;\n}\n\n/* Can combine this with overflow-hidden to make background images grow on hover\n * even if you are using background-size: cover */\n\n.grow {\n  -moz-osx-font-smoothing: grayscale;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n}\n\n.grow:hover,\n.grow:focus {\n  transform: scale(1.05);\n}\n\n.grow:active {\n  transform: scale(.90);\n}\n\n.grow-large {\n  -moz-osx-font-smoothing: grayscale;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform .25s ease-in-out;\n}\n\n.grow-large:hover,\n.grow-large:focus {\n  transform: scale(1.2);\n}\n\n.grow-large:active {\n  transform: scale(.95);\n}\n\n/* Add pointer on hover */\n\n.pointer:hover {\n  cursor: pointer;\n}\n\n/* \n   Add shadow on hover.\n\n   Performant box-shadow animation pattern from \n   http://tobiasahlin.com/blog/how-to-animate-box-shadow/ \n*/\n\n.shadow-hover {\n  cursor: pointer;\n  position: relative;\n  transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n.shadow-hover::after {\n  content: '';\n  box-shadow: 0px 0px 16px 2px rgba( 0, 0, 0, .2 );\n  border-radius: inherit;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  transition: opacity 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n.shadow-hover:hover::after,\n.shadow-hover:focus::after {\n  opacity: 1;\n}\n\n/* Combine with classes in skins and skins-pseudo for \n * many different transition possibilities. */\n\n.bg-animate,\n.bg-animate:hover,\n.bg-animate:focus {\n  transition: background-color .15s ease-in-out; \n}\n\n";
var _default = {
  staticRules: hoversCss
};
exports.default = _default;